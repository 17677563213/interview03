package com.wxy.demo01;

public class GC1Demo01 {



//    这里面要求在物理上不在连续,在逻辑上面是连续的
//    这里面是不实现区分了
//    这里面在物理上面的话,不在由划分
//    一个小块最大的32m
//    不需要这么大的空间
//
//    在宏观上面不在区分年老区,新生区
//    在细节上面还是有划分的,这里面的话主要划分为了四个区域
//    第一个就是eden, survivor
//    old
//    humongous

//    大的对象直接放在年老区,
//    这里面存放的话知识临时存放的
//    这里面最大的空间就是32的空间
//    如果不够的话,这里面就会采用拼接的形式来实现满足
//    这里面小区域的,这里面不在有内存内存碎片的
//    这里面的话几乎是可以忽略的
//    新生区,幸存区
//    这里面就会自动的添加
//    这里面会涉及到了内粗你的回收,将内存进行整合
//    这里面就可以处理,这里面就会形成连续的内存块
//    回收,
//    这里里面也是要分为四部
//    初始标记,这里面的回收的过程的话,跟前面的差不多cmGC收集器,这里面的话也需要标记
//
//    他的原理:
//    首先就是他在结构上面的话在物理上面的话,eden ,survivor,turn,,不再是内存连续的
//    在逻辑上面是内粗连续的
//    这里面的话将这里面的区域划分为了,一小块一小块,这里面的大小为1m-32m 的大小
//    这里面的结构可以变成了
//    eden ,survivor ,年老区,还有就是超大去,这里面的新添加的区域的话是由由前面的三个区域很在一起的
//    这里面的清理的分为四个步骤:
//    初始标记
//    并发标记
//    最终标记
//    筛选标记
//    他的优点
//    他的清理的过程
//    它的结构话
//    如何进行配置
//    如果是通过idea的形式的话,这里面就是需要填写五个内容
//    他的优点
//    主要从两个方面去讲
//    我不知道这里面是什么意思啊
//    这里面的就是通过在这里面添加配置
//    之后就是通过执行这里面的代码
//    在外面的话,使用的就是
//    这里面的参数的话,是可以设置的
//    什么时候执行,这里面是不确定的,这里面的话,执行的话停顿的时间也是可以人为地控制
//    这里面的话提高了性能
//    他的最大的功能的提高
//    G1与cms垃圾收集器的区别;
//    G1垃圾收集器1.它是一种内存整理的垃圾收集器,在垃圾收集的工程中,产生内存碎片很少
//    2.就是他是对stop the world 的可控性更加强,先标记再清楚G1
//    这里面的话是可以自己控制停顿的时间
//
//
//

//
//    假期的时候再去看,这里面的内容,
//    这里面的毕业的设计的内容,全部的设计的
//    这里面的话高级的工程师的话,就是需要自己的能的问题了,全部的内容都是需要看自己的,所以的话后面的时间就是要看这里面的内容了
//    这里面的话在自己看法完了这里面的算法之后在看,这里面的内容是是自己提升的阶段
//    这里面的内容的话可以让自己看一个月了
//    时间上面的话还是自己要多去做项目,如果不做项目的话自己的能力就会拉下来
//    在这里面的话自己的内容全部都是需要靠自己的提升这里面的算法的内容
//    就这么地决定了
//    再次的复习这里面的自己最近学习的内容，从这里面知道了
//    不断地提升不断的升级这里面的内容
//    全面的内容自己是看的非常的，在开始看的时候，
//    这里面的话
//
}
